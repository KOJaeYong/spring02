<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" 
	location="/resources/" />
<!-- mapping : 가상 경로(상대 경로)
location : 리소스가 실제로 저장된 경로 -->	
	<resources location="/WEB-INF/views/include/" 
		mapping="/include/**" />
	<resources location="/WEB-INF/views/images/" 
		mapping="/images/**" />	
	<resources location="/WEB-INF/views/json/" 
		mapping="/json/**" />			
	<!-- ckeditor 관련 설정 -->
	<resources location="/WEB-INF/views/ckeditor/" 
		mapping="/ckeditor/**" />	
	<!-- summernote 관련 설정 -->
	<resources location="/WEB-INF/views/summernote/" 
		mapping="/summernote/**" />	
		
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- aop의 설정을 통한 자동적인  Proxy 객체 생성 -->
	<aop:aspectj-autoproxy />
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) -->
	<context:component-scan 
base-package="com.example.spring02" />
	<!-- 파일업로드에 필요한 bean(p.521) -->
	<beans:bean id="multipartResolver"
class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 파일업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" 
			value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("d:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="d:/upload" />
	</beans:bean>

	<!-- 인터셉터 bean 설정 -->
	<beans:bean id="sampleInterceptor"
class=
"com.example.spring02.interceptor.SampleInterceptor"
/>
	<beans:bean id="loginInterceptor"
class=
"com.example.spring02.interceptor.LoginInterceptor"/>
	<beans:bean id="adminInterceptor"
class=
"com.example.spring02.interceptor.AdminInterceptor"/>
	<interceptors>
<!-- 관리자 세션 체크를 위한 인터셉터 설정 -->	
		<interceptor>
			<mapping path="/shop/product/write.do"/>
			<mapping path="/shop/product/insert.do"/>
			<beans:ref bean="adminInterceptor" />
		</interceptor>
		<interceptor>
<!-- 			<mapping path="/board/**"/>
			<exclude-mapping path="/board/list.do"/> -->
			<mapping path="/board/write.do"/>
			<mapping path="/board/insert.do"/>
			<mapping path="/board/update.do"/>
			<mapping path="/board/delete.do"/>
			<mapping path="/shop/cart/insert.do"/>
			<mapping path="/shop/cart/list.do"/>
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<interceptor>
<!-- 인터셉터의 매핑 정보 -->		
			<mapping path="/doA" />
			<mapping path="/doB" />
<!-- board 하위 url에 인터셉터 적용 -->			
			<mapping path="/board/**"/>
			<beans:ref bean="sampleInterceptor" />
		</interceptor>
	</interceptors>
	
</beans:beans>

















